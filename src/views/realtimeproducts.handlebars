<h2>Productos en Tiempo Real</h2>

<form action="/realtimeproducts" method="get">
  <label for="category">Categoría:</label>
  <select name="query" id="category">
    <option value="">Todas</option>
    <option value="electronics">Electrónica</option>
    <option value="fashion">Moda</option>
    <option value="books">Libros</option>
  </select>

  <label for="sort">Ordenar por precio:</label>
  <select name="sort" id="sort">
    <option value="">Sin orden</option>
    <option value="asc">Ascendente</option>
    <option value="desc">Descendente</option>
  </select>

  <label for="limit">Productos por página:</label>
  <select name="limit" id="limit">
    <option value="10">10</option>
    <option value="20">20</option>
    <option value="30">30</option>
  </select>

  <button type="submit">Aplicar filtros</button>
</form>

<ul id="product-list">
  {{#each products}}
    <li id="product-{{this.id}}">
      {{this.title}} - ${{this.price}}
      <button onclick="deleteProduct({{this.id}})">Eliminar</button>
    </li>
  {{/each}}
</ul>

<div class="pagination">
  {{#if hasPrevPage}}
    <a href="/realtimeproducts?page={{prevPage}}&limit={{limit}}&query={{query}}&sort={{sort}}">Página Anterior</a>
  {{/if}}

  <span>Página {{page}} de {{totalPages}}</span>

  {{#if hasNextPage}}
    <a href="/realtimeproducts?page={{nextPage}}&limit={{limit}}&query={{query}}&sort={{sort}}">Página Siguiente</a>
  {{/if}}
</div>

<form id="product-form">
  <h3>Cargar un nuevo producto</h3>
  <input type="text" id="product-title" placeholder="Nombre del producto" required>
  <input type="number" id="product-price" placeholder="Precio" required>
  <input type="number" id="product-stock" placeholder="Stock" required>
  <input type="text" id="product-category" placeholder="Categoría" required>
  <button type="submit">Agregar Producto</button>
</form>

<script src="/socket.io/socket.io.js"></script>
<script>
  const socket = io();  

  socket.on('product-list', (products) => {
    if (Array.isArray(products)) {
      const productList = document.getElementById('product-list');
      productList.innerHTML = '';  
      products.forEach(product => {
        const li = document.createElement('li');
        li.id = 'product-' + product.id;
        li.innerHTML = `${product.title} - $${product.price} <button onclick="deleteProduct(${product.id})">Eliminar</button>`;
        productList.appendChild(li);
      });
    }
  });

  const form = document.getElementById('product-form');
  form.addEventListener('submit', (e) => {
    e.preventDefault();

    const title = document.getElementById('product-title').value.trim();
    const price = document.getElementById('product-price').value.trim();
    const stock = document.getElementById('product-stock').value.trim();
    const category = document.getElementById('product-category').value.trim();

    if (!title || !price || !stock || !category) {
      alert('Todos los campos son requeridos');
      return;
    }

    const newProduct = { 
      title: title, 
      price: parseFloat(price),  
      stock: parseInt(stock),    
      category: category 
    };

    socket.emit('new-product', newProduct);
    form.reset();
  });

  function deleteProduct(productId) {
    socket.emit('delete-product', productId);
  }
</script>
